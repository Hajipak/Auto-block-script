-- FINALBLOCK - Auto Block Script with Debug Prints
print("=== FINALBLOCK SCRIPT START ===")

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local Debris = game:GetService("Debris")

local lp = Players.LocalPlayer
print("Services loaded successfully")

-- Keybind variables
local autoBlockKey = Enum.KeyCode.A
local isKeyPressed = false
local autoBlockOn = false
local autoBlockAudioOn = false
print("Keybind variables initialized")

-- Configuration variables
local detectionRange = 18
local detectionRangeSq = detectionRange * detectionRange
local facingCheckEnabled = true
local customFacingDot = -0.3
local looseFacing = true
local messageWhenAutoBlockOn = false
local messageWhenAutoBlock = ""
local killerNames = {"c00lkidd", "Jason", "JohnDoe", "1x1x1x1", "Noli", "Slasher"}
local autoPunchOn = false
local flingPunchOn = false
local flingPower = 10000
local aimPunch = false
local customBlockEnabled = false
local customBlockAnimId = ""
local customPunchEnabled = false
local customPunchAnimId = ""
local infiniteStamina = false
print("Configuration variables initialized")

-- Animation IDs
local blockAnimIds = {
    "72722244508749",
    "96959123077498",
    "95802026624883"
}
local punchAnimIds = {
    "87259391926321",
    "140703210927645",
    "136007065400978",
    "136007065400978",
    "129843313690921",
    "129843313690921",
    "86709774283672",
    "87259391926321",
    "129843313690921",
    "129843313690921",
    "108807732150251",
    "138040001965654",
    "86096387000557",
    "86096387000557"
}
local chargeAnimIds = {
    "106014898538300"
}
print("Animation IDs loaded")

-- Killers folder
local KillersFolder = workspace:WaitForChild("Players"):WaitForChild("Killers")
print("Killers folder found")

-- Function to handle key press
local function onInputBegan(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == autoBlockKey then
        isKeyPressed = true
        print("Key pressed:", autoBlockKey.Name)
        
        if autoBlockAudioOn then
            autoBlockOn = true
            print("Auto block activated")
            
            if messageWhenAutoBlockOn and messageWhenAutoBlock ~= "" then
                StarterGui:SetCore("SendNotification", {
                    Title = "Auto Block",
                    Text = messageWhenAutoBlock,
                    Duration = 2
                })
            end
        end
    end
end

-- Function to handle key release
local function onInputEnded(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == autoBlockKey then
        isKeyPressed = false
        print("Key released:", autoBlockKey.Name)
        
        if autoBlockAudioOn then
            autoBlockOn = false
            print("Auto block deactivated")
        end
    end
end

-- Connect input functions
UserInputService.InputBegan:Connect(onInputBegan)
UserInputService.InputEnded:Connect(onInputEnded)
print("Input events connected")

-- Try to load Rayfield UI
print("Loading Rayfield UI...")
local Rayfield
local success, err = pcall(function()
    Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end)

if not success then
    print("ERROR loading Rayfield:", err)
    print("Continuing without UI...")
else
    print("Rayfield loaded successfully")
    
    -- Create Window
    local Window = Rayfield:CreateWindow({
        Name = "Auto Block Hub",
        LoadingTitle = "Auto Block Script",
        LoadingSubtitle = "by Hajipak",
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "AutoBlockHub",
            FileName = "Settings"
        },
        Discord = {Enabled = false},
        KeySystem = false
    })
    print("Window created")
    
    -- Create Tabs
    local NoticeTab = Window:CreateTab("Notice", 4483362458)
    local AutoBlockTab = Window:CreateTab("Auto Block", 4483362458)
    local MiscTab = Window:CreateTab("Misc", 4483362458)
    print("Tabs created")
    
    -- Notice content
    NoticeTab:CreateParagraph({
        Title = "Welcome",
        Content = "Thanks for using my auto block script"
    })
    
    NoticeTab:CreateParagraph({
        Title = "Discord",
        Content = ".gg/Tmby2GkKJR"
    })
    
    -- Toggle for Auto Block Audio
    AutoBlockTab:CreateToggle({
        Name = "Auto Block (Audio) - Keybind: A",
        CurrentValue = false,
        Flag = "AutoBlockAudio",
        Callback = function(state)
            autoBlockAudioOn = state
            print("Auto Block Audio:", state and "Enabled" or "Disabled")
            
            if state then
                StarterGui:SetCore("SendNotification", {
                    Title = "Auto Block Audio",
                    Text = "Enabled - Press A to activate",
                    Duration = 3
                })
            else
                StarterGui:SetCore("SendNotification", {
                    Title = "Auto Block Audio",
                    Text = "Disabled",
                    Duration = 3
                })
                autoBlockOn = false
            end
        end,
    })
    
    -- Button to change keybind
    AutoBlockTab:CreateButton({
        Name = "Change Auto Block Keybind (Current: A)",
        Callback = function()
            StarterGui:SetCore("SendNotification", {
                Title = "Keybind Change",
                Text = "Press the key you want to use for Auto Block",
                Duration = 5
            })
            
            local connection
            connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if gameProcessed then return end
                
                if input.UserInputType == Enum.UserInputType.Keyboard then
                    autoBlockKey = input.KeyCode
                    print("Keybind changed to:", autoBlockKey.Name)
                    
                    StarterGui:SetCore("SendNotification", {
                        Title = "Keybind Changed",
                        Text = "New keybind: " .. tostring(autoBlockKey.Name),
                        Duration = 3
                    })
                    
                    connection:Disconnect()
                end
            end)
        end,
    })
    
    -- Toggle for message when blocking
    AutoBlockTab:CreateToggle({
        Name = "Message When Blocking",
        CurrentValue = false,
        Flag = "MessageWhenBlockToggle",
        Callback = function(Value) 
            messageWhenAutoBlockOn = Value
            print("Message when blocking:", Value and "Enabled" or "Disabled")
        end
    })
    
    -- Input for message when blocking
    AutoBlockTab:CreateInput({
        Name = "Message when blocking",
        PlaceholderText = "im gonna block ya",
        RemoveTextAfterFocusLost = false,
        Flag = "MessageWhenBlockText",
        Callback = function(Text) 
            messageWhenAutoBlock = Text
            print("Message set to:", Text)
        end
    })
    
    -- Input for detection range
    AutoBlockTab:CreateInput({
        Name = "Detection Range",
        PlaceholderText = "18",
        RemoveTextAfterFocusLost = false,
        Flag = "DetectionRange",
        Callback = function(Text)
            detectionRange = tonumber(Text) or detectionRange
            detectionRangeSq = detectionRange * detectionRange
            print("Detection range set to:", detectionRange)
        end
    })
    
    -- Toggle for infinite stamina
    MiscTab:CreateToggle({
        Name = "Infinite Stamina",
        CurrentValue = false,
        Flag = "InfiniteStamina",
        Callback = function(Value)
            infiniteStamina = Value
            print("Infinite stamina:", Value and "Enabled" or "Disabled")
            
            if Value then
                enableInfiniteStamina()
            end
        end
    })
    
    print("UI elements created")
end

-- Infinite Stamina function
local function enableInfiniteStamina()
    print("Enabling infinite stamina...")
    local success, StaminaModule = pcall(function()
        return require(game.ReplicatedStorage.Systems.Character.Game.Sprinting)
    end)
    
    if not success or not StaminaModule then 
        print("Failed to load stamina module:", success and "Module not found" or StaminaModule)
        return 
    end
    
    StaminaModule.StaminaLossDisabled = true
    print("Stamina loss disabled")

    task.spawn(function()
        while infiniteStamina and StaminaModule do
            task.wait(0.1)
            StaminaModule.Stamina = StaminaModule.MaxStamina
            StaminaModule.StaminaChanged:Fire()
        end
    end)
    
    print("Infinite stamina enabled")
end

-- Facing check function
local function isFacing(localRoot, targetRoot)
    if not facingCheckEnabled then
        return true
    end

    local dir = (localRoot.Position - targetRoot.Position).Unit
    local dot = targetRoot.CFrame.LookVector:Dot(dir)
    return dot > (customFacingDot or -0.3)
end

-- Auto block implementation
local function checkForKillers()
    if not autoBlockOn then return end
    
    local character = lp.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- Check for killers in range
    for _, killerName in ipairs(killerNames) do
        local killer = KillersFolder:FindFirstChild(killerName)
        if killer then
            local killerHumanoid = killer:FindFirstChild("Humanoid")
            local killerHumanoidRootPart = killer:FindFirstChild("HumanoidRootPart")
            
            if killerHumanoid and killerHumanoidRootPart and killerHumanoid.Health > 0 then
                local distance = (humanoidRootPart.Position - killerHumanoidRootPart.Position).Magnitude
                local distanceSq = distance * distance
                
                if distanceSq <= detectionRangeSq then
                    -- Check if killer is facing the player
                    if isFacing(humanoidRootPart, killerHumanoidRootPart) then
                        print("Killer detected in range:", killerName, "Distance:", distance)
                        
                        -- Here you would implement the actual block logic
                        -- For now, we'll just print a message
                        if messageWhenAutoBlockOn and messageWhenAutoBlock ~= "" then
                            StarterGui:SetCore("SendNotification", {
                                Title = "Auto Block",
                                Text = "Blocking " .. killerName,
                                Duration = 1
                            })
                        end
                        
                        -- Fling punch if enabled
                        if flingPunchOn then
                            print("Fling punch activated")
                            local start = tick()
                            while tick() - start < 1 do
                                if character and character:FindFirstChild("HumanoidRootPart") and killerHumanoidRootPart and killerHumanoidRootPart.Parent then
                                    local frontPos = killerHumanoidRootPart.Position + (killerHumanoidRootPart.CFrame.LookVector * 2)
                                    character.HumanoidRootPart.CFrame = CFrame.new(frontPos, killerHumanoidRootPart.Position)
                                end
                                task.wait()
                            end
                        end
                    end
                end
            end
        end
    end
end

-- Main loop
print("Starting main loop")
RunService.Heartbeat:Connect(checkForKillers)

-- Character added event
lp.CharacterAdded:Connect(function(char)
    print("New character added")
    task.wait(1)
    if infiniteStamina then
        enableInfiniteStamina()
    end
end)

print("=== FINALBLOCK SCRIPT LOADED SUCCESSFULLY ===")
StarterGui:SetCore("SendNotification", {
    Title = "FINALBLOCK",
    Text = "Script loaded successfully!",
    Duration = 3
})
